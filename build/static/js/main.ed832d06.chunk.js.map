{"version":3,"sources":["assets/img/cadre.png","assets/img/arrow.svg","assets/img/mac.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","sceneSize","x","y","useImage","cadre","mac","macimg","useState","setImage","text","setText","text2","setText2","color","w","h","imageProps","setImageProps","imageScale","hideStage","loading","setLoading","uri","setUri","showGenerate","setShowGenerate","setImageText","stageRef","useRef","useEffect","generateImage","Blob","file","name","reader","FileReader","onload","e","img","window","Image","src","target","result","imgR","srcWidth","srcHeight","maxWidth","maxHeight","ratio","Math","max","width","height","calculateAspectRatioFit","naturalWidth","naturalHeight","readAsDataURL","className","htmlFor","id","type","placeholder","value","onChange","s","onClick","setTimeout","current","toDataURL","random","style","position","ref","image","scaleX","scaleY","toUpperCase","align","fontSize","fontFamily","fill","alt","link","document","createElement","download","href","body","appendChild","click","removeChild","downloadURI","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ed832d06.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cadre.6fda98eb.png\";","export default __webpack_public_path__ + \"static/media/arrow.5ef52744.svg\";","export default __webpack_public_path__ + \"static/media/mac.75c608a9.jpg\";","import React, { useState, useRef, useEffect } from \"react\";\nimport { Image as KonvaImage, Layer, Stage, Text as KonvaText } from \"react-konva\";\nimport Dropzone from \"react-dropzone\";\nimport useImage from \"use-image\";\n\nimport arrowSVG from \"../src/assets/img/arrow.svg\";\nimport cadre from \"../src/assets/img/cadre.png\";\nimport mac from \"../src/assets/img/mac.jpg\";\n\n\nexport default function App() {\n  const sceneSize = { x: 828 / 2, y: 1259 / 2 };\n  let [cadreimg] = useImage(cadre);\n  let [macimg] = useImage(mac);\n\n  let [image, setImage] = useState(null);\n  let [text, setText] = useState(\"des cons\");\n  let [text2, setText2] = useState(\"vivement la fin de la saison\");\n\n  let [color] = useState(\"#e2001a\");\n  let [imageProps, setImageProps] = useState({ x: 0, y: 0, w: 828 / 2, h: 1259 / 2 });\n  let [imageScale] = useState(1);\n\n  let [hideStage] = useState(true);\n  let [loading, setLoading] = useState(false);\n  let [uri, setUri] = useState(null);\n  let [showGenerate, setShowGenerate] = useState(true);\n  let [strokeColor] = useState(\"#000000\");\n  let [imageText, setImageText] = useState(\"Choisir une image\");\n  const stageRef = useRef(null);\n\n  useEffect(() => {\n    generateImage(new Blob([mac]));\n  }, [])\n\n  const fileDrop = (acceptedFiles) => {\n    generateImage(acceptedFiles[0]);\n  };\n\n  const calculateAspectRatioFit = (srcWidth, srcHeight, maxWidth, maxHeight) => {\n    var ratio = Math.max(maxWidth / srcWidth, maxHeight / srcHeight);\n\n    return { width: srcWidth * ratio, height: srcHeight * ratio };\n  };\n\n  const generateImage = (file) => {\n    setImageText(file.name);\n    setShowGenerate(true);\n    const reader = new FileReader();\n    reader.onload = function (e) {\n      let img = new window.Image();\n      img.src = e.target.result;\n\n      img.onload = function () {\n        const imgR = calculateAspectRatioFit(img.naturalWidth, img.naturalHeight, 500, 500);\n\n        setImageProps({\n          x: sceneSize.x / 2 - imgR.width / 2,\n          y: sceneSize.y / 2 - imgR.height / 2,\n          w: imgR.width,\n          h: imgR.height,\n        });\n        setImage(img);\n      };\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const handleKeyDown = (e) => {\n    setShowGenerate(true);\n    setText((s) => (s = e.target.value));\n  };\n\n  const handleKeyDown2 = (e) => {\n    setShowGenerate(true);\n    setText2((s) => (s = e.target.value));\n  };\n\n\n  const handleExport = () => {\n\n    setTimeout(() => {\n      setUri(uri);\n      downloadURI(uri, \"macron-netflix.png\");\n    }, 100);\n  };\n\n  function downloadURI(uri, name) {\n    var link = document.createElement(\"a\");\n    link.download = name;\n    link.href = uri;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n  }\n\n  function handleGenerate() {\n    setLoading(s => s = true);\n    setTimeout(() => {\n      setShowGenerate(s => s = false);\n      setLoading(s => s = false);\n      //setHideStage(s => s = false);\n      const uri = stageRef.current.toDataURL();\n      setUri(uri);\n    }, 1200 + (Math.random() * 1000));\n  }\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>MACRON NETFLIX</h1>\n      </header>\n\n      <div className=\"imp\">\n        <label htmlFor=\"input-text\">\n          <span className=\"input-text-label\">Titre du film</span>\n          <input\n            id=\"input-text\"\n            className=\"input-text\"\n            type=\"text\"\n            placeholder=\"Macron, président des riches\"\n            value={text}\n            onChange={handleKeyDown}\n          />\n        </label>\n      </div>\n\n      <div className=\"imp\">\n        <label htmlFor=\"input-text\">\n          <span className=\"input-text-label\">Sous-titre du film</span>\n          <input\n            id=\"input-text2\"\n            className=\"input-text\"\n            type=\"text\"\n            placeholder=\"Macr\"\n            value={text2}\n            onChange={handleKeyDown2}\n          />\n        </label>\n      </div>\n\n      {/* <div className=\"imp\">\n        <span className=\"input-text-label\">Charger votre image</span>\n        <Dropzone onDrop={fileDrop}>\n          {({ getRootProps, getInputProps }) => (\n            <section>\n              <div {...getRootProps({ className: \"dropzone\" })}>\n                <input {...getInputProps()} />\n                <p>{imageText}</p>\n              </div>\n            </section>\n          )}\n        </Dropzone>\n      </div> */}\n\n      <div className={`generer-c ${showGenerate ? \"show\" : \"hidden\"} ${loading ? \"isloading\" : \"\"}`}>\n        <button onClick={handleGenerate} className=\"generer\">Générer</button>\n      </div>\n\n      <div className={loading ? \"show generer-c\" : \"hidden generer-c\"}>\n        <div className=\"LoaderBalls\">\n          <div className=\"LoaderBalls__item\"></div>\n          <div className=\"LoaderBalls__item\"></div>\n          <div className=\"LoaderBalls__item\"></div>\n        </div>\n      </div>\n\n      <main className={hideStage ? \"hidden\" : \"show\"}>\n        <div className=\"stage\" style={{ position: \"relative\" }}>\n          <Stage\n\n          width={sceneSize.x} height={sceneSize.y} ref={stageRef}>\n            <Layer>\n              <KonvaImage\n                // draggable\n                image={macimg}\n                scaleX={imageScale}\n                scaleY={imageScale}\n                x={imageProps.x}\n                y={imageProps.y}\n                width={imageProps.w}\n                height={imageProps.h}\n              />\n              <KonvaText\n                x={-20}\n                y={165}\n                text={text.toUpperCase()}\n                align=\"center\"\n                fontSize={45}\n                fontFamily=\"arial black\"\n\n                fill={color}\n                width={450}\n                // draggable\n              />\n              <KonvaText\n                x={80}\n                y={420}\n                text={text2.toUpperCase()}\n                align=\"center\"\n                fontSize={25}\n                fontFamily=\"arial\"\n                fill={\"#fff\"}\n                width={250}\n                // draggable\n              />\n            </Layer>\n\n            {/* <Layer>\n              <KonvaImage x={0} y={0} image={cadreimg} />\n            </Layer> */}\n          </Stage>\n\n          {/* <Stage\n          className=\"canvas responsive-canvas\"\n          width={sceneSize.x} height={sceneSize.y} style={{ position: \"absolute\", top: 0, left: 0, pointerEvents: \"none\" }}>\n            <Layer>\n              <KonvaImage x={0} y={0} image={cadreimg} />\n            </Layer>\n          </Stage> */}\n        </div>\n      </main>\n\n      <footer className={`${!showGenerate ? \"show\" : \"hidden\"}`}>\n        { uri ? <img src={uri} alt=\"\"/> : \"\" }\n        <button className=\"export\"  onClick={handleExport}>Enregistrer</button>\n\n      </footer>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}